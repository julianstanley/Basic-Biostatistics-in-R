arrows(x0 = bar1, y0 = mean(my.mat2) - sd(my.mat2) , x1 = bar1, y1 = mean(my.mat2) + sd(my.mat2), angle = 90, code = 3)
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"))
arrows(x0 = bar1, y0 = mean(bar1) - sd(bar1) , x1 = bar1, y1 = mean(bar1) + sd(bar1), angle = 90, code = 3)
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"))
arrows(x0 = bar1, y0 = 1 , x1 = bar1, y1 = 3, angle = 90, code = 3)
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"))
arrows(x0 = bar1, y0 = 1 , x1 = bar1, y1 = 3, angle = 90, code = 3)
# Function that computes 95 percent confidence intervals
conf95 <- function(x) {
return(1.96*(sd(x) / sqrt(length(x))))
}
# upper conf interval
my.conf_upper = my.means + sapply(my.vars, FUN = conf95)
my.conf_lower = my.means - sapply(my.vars, FUN = conf95)
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
# Function that computes 95 percent confidence intervals
conf95 <- function(x) {
return(1.96*(sd(x) / sqrt(length(x))))
}
# upper conf interval
my.conf_upper = my.means + sapply(my.vars, FUN = conf95)
my.conf_lower = my.means - sapply(my.vars, FUN = conf95)
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"))
arrows(x0 = bar1, y0 = my.conf_lower , x1 = bar1, y1 = my.conf_upper, angle = 90, code = 3)
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
# Function that computes 95 percent confidence intervals
conf95 <- function(x) {
return(1.96*(sd(x) / sqrt(length(x))))
}
# upper conf interval
my.conf_upper = my.means + sapply(my.vars, FUN = conf95)
my.conf_lower = my.means - sapply(my.vars, FUN = conf95)
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"), ylim = x(0,40))
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
# Function that computes 95 percent confidence intervals
conf95 <- function(x) {
return(1.96*(sd(x) / sqrt(length(x))))
}
# upper conf interval
my.conf_upper = my.means + sapply(my.vars, FUN = conf95)
my.conf_lower = my.means - sapply(my.vars, FUN = conf95)
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"), ylim = c(0,40))
arrows(x0 = bar1, y0 = my.conf_lower , x1 = bar1, y1 = my.conf_upper, angle = 90, code = 3)
my.sums <- colSums(my.vars)
# Create some data
my.table <- cbind(c(5, 21), c(65, 56))
my.table
f.test <- fisher.test(my.table)
f.test
# Extract the p-value
f.test$p.value
d1 <- read.csv("http://faraway.neu.edu/data/lab3_dataset1.csv")
d1.head()
head(d1)
table(d1)
factor(d1)
colnames(d1)
colnames(d1)
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1, FUN = mean)
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1, FUN = mean)
seed.means
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1, FUN = mean)
seed.means
seeds.conf.lower <- seed.means - sapply(seed.means, FUN = conf95)
seeds.conf.upper <- seed.means +  sapply(seed.means, FUN = conf95)
barplot(d1)
barplot(seed.means)
barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, )
barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE)
barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
arrows(x0 = bar1, y0 = seeds.conf_lower , x1 = bar1, y1 = seeds.conf_upper, angle = 90, code = 3)
seedsBar <- barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf_lower , x1 = seedsBar, y1 = seeds.conf_upper, angle = 90, code = 3)
seedsBar <- barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seeds.conf.lower
seed.means
sapply(seed.means, FUN = conf95)
sapply(d1, FUN = conf95)
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1, FUN = mean)
seed.means
seeds.conf.lower <- seed.means - sapply(d1, FUN = conf95)
seeds.conf.upper <- seed.means +  sapply(d1, FUN = conf95)
seedsBar <- barplot(seed.means, names.arg = c("trial", "GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seed.means
# Take the means of my data
seed.means
# Format-- Columns (GMO, WILD), Rows (Germinated, Not Germinated)
seed.table <- cbind(c(seed.means[2], seed.means[3]), c(seed.means[4], seed.means[5]))
seed.table
seed.test <- fisher.test(seed.table)
seed.test
# Extract the p-value
seed.test$p.value
seed.test$estimate
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1, FUN = mean)
seed.means
seeds.conf.lower <- seed.means - sapply(d1[2:5], FUN = conf95)
seeds.conf.upper <- seed.means +  sapply(d1[2:5], FUN = conf95)
seeds.conf.lower
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1[2:5], FUN = mean)
seed.means
seeds.conf.lower <- seed.means - sapply(d1[2:5], FUN = conf95)
seeds.conf.upper <- seed.means +  sapply(d1[2:5], FUN = conf95)
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = TRUE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seedsBar <- barplot(seed.table, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
# Download the dataset
d2 <- read.csv("http://faraway.neu.edu/data/lab3_dataset2.csv")
??bleh
??graph
?graph
sapply(d2, FUN = sum
sapply(d2, FUN = sum)
sapply(d2, FUN = sum())
d2
sapply(d2, FUN = count)
sapply(d2, FUN = sum)
d2
d2
sapply(d2[2:6], FUN = sum)
d2[2:5]
sapply(d2[2:6], FUN = sum)
d2[2:5]
d2[1:5]
d2[1:6]
d2[1:5]
sapply(d2[2:5], FUN = sum)
d2
sapply(d2[2:5], FUN = sum)
table(sapply(d2[2:5], FUN = sum))
sapply(d2[2:5], FUN = sum)
disease.table <- cbind(506, 465), c(228, 260))
disease.table <- cbind(c(506, 465), c(228, 260))
fisher.test(disease.table)
d2[1,]
d[1.2:5]
d2[1,2:5]
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:number(nrow(d2))) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
x[i, 1] <- d2[i, 1]
x[i, 2] <- fisher.test(v.table)$p.value
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:numeric(nrow(d2))) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
x[i, 1] <- d2[i, 1]
x[i, 2] <- fisher.test(v.table)$p.value
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:numeric(nrow(d2))) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
fin[i, 1] <- d2[i, 1]
fin[i, 2] <- fisher.test(v.table)$p.value
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:numeric(nrow(d2))) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(fisher.test(v.table)$p.value)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:numeric(nrow(d2))) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(v.table)
}
numeric(nrow(d2))
nrow(d2)
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(v.table)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(fisher.test(v.table)$p.value
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(fisher.test(v.table)$p.value)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(fisher.test(v.table))
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(v.table)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(fisher.test(v.table))
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[2]), c(v[3], v[4]))
print(v.table)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(v[1:2], v[3,4])
print(v.table)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[3]), c(v[2], v[4]))
print(v.table)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(v[1], v[3]), c(v[2], v[4]))
print(fisher.test(v.table))
}
test <- d2[1, 2:5]
table.test <- cbind(c(test[1], test[3]), c(test[2], test[4]))
table.test
fisher.test(table.test)
?fisher.test
dim(table.test)
type(table.test)
table.test
table.test <- cbind(c(45, 15), c(40, 31))
table.test
fisher.test(table.test)
test[1]
test[1][1]
test[1][2]
test[1]
as.numeric(test[1])
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3]), c(as.numeric(v[2]), as.numeric(v[4]))))
print(fisher.test(v.table))
}
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3]), c(as.numeric(v[2]), as.numeric(v[4]))))
print(v.table)
}
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
print(v.table)
}
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
print(fisher.test(v.table))
}
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
print(fisher.test(v.table)$p.value)
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- d2[i, 1]
fin[i, 2] <- fisher.test(v.table)$p.value
}
fin
d1[1,1]
d2[1,1]
d2
d2$countries[1]
as.string(d2$countries[1])
as.character(d2$countries[1])
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- as.character(d2$countries[i])
fin[i, 2] <- fisher.test(v.table)$p.value
}
fin
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- as.character(d2$countries[i])
fin[i, 2] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
fin
fin <- matrix(NA, nrow = nrow(d2), ncol = 2)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 2] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
fin
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 2] <- fisher.test(v.table)$p.value
}
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
fin
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
typeof(fin)
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
typeof(fin)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
typeof(fin)
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
barplot(fin)
barplot(fin, horiz = TRUE)
barplot(fin[1:4,], horiz = TRUE)
barplot(fin[1:4,], horiz = FALSE)
barplot(fin[1:5,], horiz = FALSE)
barplot(fin[1:6,], horiz = FALSE)
barplot(fin[1:10,], horiz = FALSE)
barplot(fin, horiz = FALSE)
n[1:10
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
barplot(fin[1:4,], horiz = FALSE)
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
barplot(fin[1:10,], horiz = FALSE)
barplot(fin[1:11,], horiz = FALSE)
barplot(fin[1:10,], horiz = FALSE)
barplot(fin, horiz = FALSE)
barplot(fin[1:10,], horiz = FALSE)
barplot(fin[1:11,], horiz = FALSE, ylab = "")
barplot(fin[1:10,], horiz = FALSE, ylab = "")
barplot(fin[1:10,], horiz = FALSE, ylab = "P Value", xlab = "Countries")
seed.means
seed.table <- cbind(c(as.numeric(seed.means[2]), as.numeric(seed.means[3])), c(as.numeric(seed.means[4]), as.numeric(seed.means[5])))
seed.table
seed.table <- cbind(c(as.numeric(seed.means[1]), as.numeric(seed.means[3])), c(as.numeric(seed.means[2]), as.numeric(seed.means[4])))
seed.table
seed.test <- fisher.test(seed.table)
seed.sum <- sapply(d1[2:5], FUN = sum)
seed.table <- cbind(c(as.numeric(seed.sum[1]), as.numeric(seed.sum[3])), c(as.numeric(seed.sum[2]), as.numeric(seed.sum[4])))
seed.table
seed.test <- fisher.test(seed.table)
seed.test
seed.test$p.value
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,1000))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,300))
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
# This is where you set global options (leave as-is)
knitr::opts_chunk$set(echo = TRUE)
my.vars <- data.frame(a1 = 1:10, a2 = 11:20, b1 = 21:30, b2 = 31:40)
my.means <- sapply(my.vars, FUN = mean)
my.means
# Get the mean of the first and third columns
my.first.means <- sapply(my.vars[,c(1,3)], FUN = mean)
my.first.means
my.mat <- cbind(my.means[c(1,3)], my.means[c(2,4)])
my.mat
barplot(my.mat,beside = TRUE, names.arg = c("a1", "b1", "a2", "b2"))
my.mat2 <- cbind(my.means[c(1,2)], my.means[c(3,4)])
my.mat2
# Function that computes 95 percent confidence intervals
conf95 <- function(x) {
return(1.96*(sd(x) / sqrt(length(x))))
}
# upper conf interval
my.conf_upper = my.means + sapply(my.vars, FUN = conf95)
my.conf_lower = my.means - sapply(my.vars, FUN = conf95)
bar1 <- barplot(my.mat2,beside = TRUE, names.arg = c("a1", "a2", "b1", "b2"), ylim = c(0,40))
arrows(x0 = bar1, y0 = my.conf_lower , x1 = bar1, y1 = my.conf_upper, angle = 90, code = 3)
my.sums <- colSums(my.vars)
# Create some data
my.table <- cbind(c(5, 21), c(65, 56))
my.table
f.test <- fisher.test(my.table)
f.test
# Extract the p-value
f.test$p.value
d1 <- read.csv("http://faraway.neu.edu/data/lab3_dataset1.csv")
colnames(d1)
# Seeds germinated vs seeds that failed to germinate in GMO and wild type
seed.means <- sapply(d1[2:5], FUN = sum)
seed.means
seeds.conf.lower <- seed.means - sapply(d1[2:5], FUN = conf95)
seeds.conf.upper <- seed.means +  sapply(d1[2:5], FUN = conf95)
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,100))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
seed.sum <- sapply(d1[2:5], FUN = sum)
seed.table <- cbind(c(as.numeric(seed.sum[1]), as.numeric(seed.sum[3])), c(as.numeric(seed.sum[2]), as.numeric(seed.sum[4])))
seed.table
seed.test <- fisher.test(seed.table)
seed.test
# Extract the p-value
seed.test$p.value
seed.test$estimate
# Download the dataset
d2 <- read.csv("http://faraway.neu.edu/data/lab3_dataset2.csv")
sapply(d2[2:5], FUN = sum)
disease.table <- cbind(c(506, 465), c(228, 260))
fisher.test(disease.table)
fin <- matrix(NA, nrow = nrow(d2), ncol = 1)
for (i in 1:nrow(d2)) {
v <- d2[i, 2:5]
v.table <- cbind(c(as.numeric(v[1]), as.numeric(v[3])), c(as.numeric(v[2]), as.numeric(v[4])))
fin[i, 1] <- fisher.test(v.table)$p.value
}
rownames(fin) <- as.character(d2$countries)
colnames(fin) <- "P Values"
fin
barplot(fin[1:10,], horiz = FALSE, ylab = "P Value", xlab = "Countries")
seedsBar <- barplot(seed.means, names.arg = c("GMO Germ", "Wild Germ", "GMO NoGerm", "Wild NoGerm"), beside = FALSE, ylim = c(0,1000))
arrows(x0 = seedsBar, y0 = seeds.conf.lower , x1 = seedsBar, y1 = seeds.conf.upper, angle = 90, code = 3)
